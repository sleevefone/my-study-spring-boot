{
  "hints": [
    {
      "values": [
        {
          "value": "*"
        }
      ],
      "name": "management.endpoints.web.cors.allowed-headers",
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "values": [
        {
          "value": "*"
        }
      ],
      "name": "management.endpoints.web.cors.allowed-methods",
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "values": [
        {
          "value": "*"
        }
      ],
      "name": "management.endpoints.web.cors.allowed-origins",
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "values": [
        {
          "value": "auditevents"
        },
        {
          "value": "beans"
        },
        {
          "value": "conditions"
        },
        {
          "value": "configprops"
        },
        {
          "value": "env"
        },
        {
          "value": "flyway"
        },
        {
          "value": "health"
        },
        {
          "value": "heapdump"
        },
        {
          "value": "httptrace"
        },
        {
          "value": "info"
        },
        {
          "value": "liquibase"
        },
        {
          "value": "logfile"
        },
        {
          "value": "loggers"
        },
        {
          "value": "mappings"
        },
        {
          "value": "metrics"
        },
        {
          "value": "prometheus"
        },
        {
          "value": "scheduledtasks"
        },
        {
          "value": "sessions"
        },
        {
          "value": "shutdown"
        },
        {
          "value": "threaddump"
        }
      ],
      "name": "management.endpoints.web.path-mapping.keys",
      "providers": [
        {
          "name": "any"
        }
      ]
    },
    {
      "values": [
        {
          "value": "UNKNOWN"
        },
        {
          "value": "UP"
        },
        {
          "value": "DOWN"
        },
        {
          "value": "OUT_OF_SERVICE"
        }
      ],
      "name": "management.health.status.order",
      "providers": [
        {
          "name": "any"
        }
      ]
    }
  ],
  "groups": [
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
      "name": "management.endpoint.conditions",
      "type": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
      "name": "management.endpoint.configprops",
      "type": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
      "name": "management.endpoint.env",
      "type": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
      "name": "management.endpoint.health",
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.jolokia.JolokiaProperties",
      "name": "management.endpoint.jolokia",
      "type": "org.springframework.boot.actuate.autoconfigure.jolokia.JolokiaProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.jolokia.JolokiaEndpoint",
      "name": "management.endpoint.jolokia",
      "type": "org.springframework.boot.actuate.autoconfigure.jolokia.JolokiaEndpoint"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties",
      "name": "management.endpoint.logfile",
      "type": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties",
      "name": "management.endpoints.jmx",
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties",
      "name": "management.endpoints.jmx.exposure",
      "sourceMethod": "getExposure()",
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties$Exposure"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
      "name": "management.endpoints.web",
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
      "name": "management.endpoints.web.cors",
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
      "name": "management.endpoints.web.exposure",
      "sourceMethod": "getExposure()",
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.couchbase.CouchbaseHealthIndicatorProperties",
      "name": "management.health.couchbase",
      "type": "org.springframework.boot.actuate.autoconfigure.couchbase.CouchbaseHealthIndicatorProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
      "name": "management.health.diskspace",
      "type": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.elasticsearch.ElasticsearchHealthIndicatorProperties",
      "name": "management.health.elasticsearch",
      "type": "org.springframework.boot.actuate.autoconfigure.elasticsearch.ElasticsearchHealthIndicatorProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties",
      "name": "management.health.status",
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
      "name": "management.info",
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
      "name": "management.info.git",
      "sourceMethod": "getGit()",
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
      "name": "management.metrics",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
      "name": "management.metrics.distribution",
      "sourceMethod": "getDistribution()",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "name": "management.metrics.export.atlas",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "name": "management.metrics.export.datadog",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "name": "management.metrics.export.ganglia",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties",
      "name": "management.metrics.export.graphite",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "name": "management.metrics.export.influx",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.jmx.JmxProperties",
      "name": "management.metrics.export.jmx",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.jmx.JmxProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties",
      "name": "management.metrics.export.newrelic",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties",
      "name": "management.metrics.export.prometheus",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties",
      "name": "management.metrics.export.signalfx",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
      "name": "management.metrics.export.simple",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties",
      "name": "management.metrics.export.statsd",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties",
      "name": "management.metrics.export.wavefront",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
      "name": "management.metrics.web",
      "sourceMethod": "getWeb()",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web",
      "name": "management.metrics.web.client",
      "sourceMethod": "getClient()",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web",
      "name": "management.metrics.web.server",
      "sourceMethod": "getServer()",
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
      "name": "management.server",
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
      "name": "management.server.servlet",
      "sourceMethod": "getServlet()",
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties$Servlet"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
      "name": "management.server.ssl",
      "sourceMethod": "getSsl()",
      "type": "org.springframework.boot.web.server.Ssl"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties",
      "name": "management.trace.http",
      "type": "org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties"
    }
  ],
  "properties": [
    {
      "deprecated": true,
      "name": "endpoints.actuator.enabled",
      "description": "Whether to enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "The \"actuator\" endpoint is no longer available.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.actuator.path",
      "description": "Endpoint URL path.",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "The \"actuator\" endpoint is no longer available.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.actuator.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "The \"actuator\" endpoint is no longer available.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.auditevents.enabled",
      "description": "Enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.auditevents.enabled"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.auditevents.path",
      "description": "Endpoint URL path.",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.path-mapping.auditevents"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.auditevents.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Endpoint sensitive flag is no longer customizable as Spring Boot no longer provides a customizable security auto-configuration\n. Create or adapt your security configuration accordingly.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.autoconfig.enabled",
      "description": "Enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.conditions.enabled"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.autoconfig.id",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '\/foo').",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "Endpoint identifier is no longer customizable.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.autoconfig.path",
      "description": "Endpoint URL path.",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.path-mapping.conditions"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.autoconfig.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Endpoint sensitive flag is no longer customizable as Spring Boot no longer provides a customizable security auto-configuration\n. Create or adapt your security configuration accordingly.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.beans.enabled",
      "description": "Enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.beans.enabled"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.beans.id",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '\/foo').",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "Endpoint identifier is no longer customizable.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.beans.path",
      "description": "Endpoint URL path.",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.path-mapping.beans"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.beans.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Endpoint sensitive flag is no longer customizable as Spring Boot no longer provides a customizable security auto-configuration\n. Create or adapt your security configuration accordingly.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.configprops.enabled",
      "description": "Enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.configprops.enabled"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.configprops.id",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '\/foo').",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "Endpoint identifier is no longer customizable.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.configprops.keys-to-sanitize",
      "description": "Keys that should be sanitized. Keys can be simple strings that the property ends with or regex expressions.",
      "type": "java.lang.String[]",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.configprops.keys-to-sanitize"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.configprops.path",
      "description": "Endpoint URL path.",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.path-mapping.configprops"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.configprops.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Endpoint sensitive flag is no longer customizable as Spring Boot no longer provides a customizable security auto-configuration\n. Create or adapt your security configuration accordingly.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.cors.allow-credentials",
      "description": "Set whether credentials are supported. When not set, credentials are not supported.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.cors.allow-credentials"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.cors.allowed-headers",
      "description": "Comma-separated list of headers to allow in a request. '*' allows all headers.",
      "type": "java.util.List<java.lang.String>",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.cors.allowed-headers"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.cors.allowed-methods",
      "description": "Comma-separated list of methods to allow. '*' allows all methods. When not set,\n defaults to GET.",
      "type": "java.util.List<java.lang.String>",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.cors.allowed-methods"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.cors.allowed-origins",
      "description": "Comma-separated list of origins to allow. '*' allows all origins. When not set,\n CORS support is disabled.",
      "type": "java.util.List<java.lang.String>",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.cors.allowed-origins"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.cors.exposed-headers",
      "description": "Comma-separated list of headers to include in a response.",
      "type": "java.util.List<java.lang.String>",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.cors.exposed-headers"
      }
    },
    {
      "defaultValue": 1800,
      "deprecated": true,
      "name": "endpoints.cors.max-age",
      "description": "How long, in seconds, the response from a pre-flight request can be cached by\n clients.",
      "type": "java.lang.Long",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.cors.max-age"
      }
    },
    {
      "defaultValue": false,
      "deprecated": true,
      "name": "endpoints.docs.curies.enabled",
      "description": "Whether to enable the curie generation.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "The \"docs\" endpoint is no longer available.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.docs.enabled",
      "description": "Whether to enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "The \"docs\" endpoint is no longer available.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.docs.path",
      "description": "Endpoint URL path.",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "The \"docs\" endpoint is no longer available.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.docs.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "The \"docs\" endpoint is no longer available.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.dump.enabled",
      "description": "Whether to enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.threaddump.enabled"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.dump.id",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '\/foo').",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "Endpoint identifier is no longer customizable.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.dump.path",
      "description": "Endpoint URL path.",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.path-mapping.dump"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.dump.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Endpoint sensitive flag is no longer customizable as Spring Boot no longer provides a customizable security auto-configuration\n. Create or adapt your security configuration accordingly.",
        "level": "error"
      }
    },
    {
      "defaultValue": true,
      "deprecated": true,
      "name": "endpoints.enabled",
      "description": "Whether to enable endpoints.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.enabled-by-default"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.env.enabled",
      "description": "Enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.env.enabled"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.env.id",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '\/foo').",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "Endpoint identifier is no longer customizable.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.env.keys-to-sanitize",
      "description": "Keys that should be sanitized. Keys can be simple strings that the property ends with or regex expressions.",
      "type": "java.lang.String[]",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.env.keys-to-sanitize"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.env.path",
      "description": "Endpoint URL path.",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.path-mapping.env"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.env.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Endpoint sensitive flag is no longer customizable as Spring Boot no longer provides a customizable security auto-configuration\n. Create or adapt your security configuration accordingly.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.flyway.enabled",
      "description": "Enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.flyway.enabled"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.flyway.id",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '\/foo').",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "Endpoint identifier is no longer customizable.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.flyway.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Endpoint sensitive flag is no longer customizable as Spring Boot no longer provides a customizable security auto-configuration\n. Create or adapt your security configuration accordingly.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.health.enabled",
      "description": "Enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.health.enabled"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.health.id",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '\/foo').",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "Endpoint identifier is no longer customizable.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.health.mapping",
      "description": "Mapping of health statuses to HTTP status codes. By default, registered health\n statuses map to sensible defaults (i.e. UP maps to 200).",
      "type": "java.util.Map<java.lang.String,org.springframework.http.HttpStatus>",
      "deprecation": {
        "level": "error",
        "replacement": "management.health.status.http-mapping"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.health.path",
      "description": "Endpoint URL path.",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.path-mapping.health"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.health.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Endpoint sensitive flag is no longer customizable as Spring Boot no longer provides a customizable security auto-configuration\n. Create or adapt your security configuration accordingly.",
        "level": "error"
      }
    },
    {
      "defaultValue": 1000,
      "deprecated": true,
      "name": "endpoints.health.time-to-live",
      "description": "Time to live for cached result, in milliseconds.",
      "type": "java.lang.Long",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.health.cache.time-to-live"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.heapdump.enabled",
      "description": "Enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.heapdump.enabled"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.heapdump.path",
      "description": "Endpoint URL path.",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.path-mapping.heapdump"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.heapdump.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Endpoint sensitive flag is no longer customizable as Spring Boot no longer provides a customizable security auto-configuration\n. Create or adapt your security configuration accordingly.",
        "level": "error"
      }
    },
    {
      "defaultValue": false,
      "deprecated": true,
      "name": "endpoints.hypermedia.enabled",
      "description": "Whether to enable hypermedia support for endpoints.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Hypermedia support in the Actuator is no longer available.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.info.enabled",
      "description": "Enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.info.enabled"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.info.id",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '\/foo').",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "Endpoint identifier is no longer customizable.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.info.path",
      "description": "Endpoint URL path.",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.path-mapping.info"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.info.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Endpoint sensitive flag is no longer customizable as Spring Boot no longer provides a customizable security auto-configuration\n. Create or adapt your security configuration accordingly.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.jmx.domain",
      "description": "JMX domain name. Initialized with the value of 'spring.jmx.default-domain' if set.",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.jmx.domain"
      }
    },
    {
      "defaultValue": true,
      "deprecated": true,
      "name": "endpoints.jmx.enabled",
      "description": "Whether to enable JMX export of all endpoints.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.jmx.exposure.exclude"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.jmx.static-names",
      "description": "Additional static properties to append to all ObjectNames of MBeans representing\n Endpoints.",
      "type": "java.util.Properties",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.jmx.static-names"
      }
    },
    {
      "defaultValue": false,
      "deprecated": true,
      "name": "endpoints.jmx.unique-names",
      "description": "Whether to ensure that ObjectNames are modified in case of conflict.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.jmx.unique-names"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.jolokia.enabled",
      "description": "Whether to enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.jolokia.enabled"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.jolokia.path",
      "description": "Endpoint URL path.",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.path-mapping.jolokia"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.jolokia.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Endpoint sensitive flag is no longer customizable as Spring Boot no longer provides a customizable security auto-configuration\n. Create or adapt your security configuration accordingly.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.liquibase.enabled",
      "description": "Enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.liquibase.enabled"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.liquibase.id",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '\/foo').",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "Endpoint identifier is no longer customizable.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.liquibase.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Endpoint sensitive flag is no longer customizable as Spring Boot no longer provides a customizable security auto-configuration\n. Create or adapt your security configuration accordingly.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.logfile.enabled",
      "description": "Enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.logfile.enabled"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.logfile.external-file",
      "description": "External Logfile to be accessed. Can be used if the logfile is written by output\n redirect and not by the logging-system itself.",
      "type": "java.io.File",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.logfile.external-file"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.logfile.path",
      "description": "Endpoint URL path.",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.path-mapping.logfile"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.logfile.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Endpoint sensitive flag is no longer customizable as Spring Boot no longer provides a customizable security auto-configuration\n. Create or adapt your security configuration accordingly.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.loggers.enabled",
      "description": "Enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.loggers.enabled"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.loggers.id",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '\/foo').",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "Endpoint identifier is no longer customizable.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.loggers.path",
      "description": "Endpoint URL path.",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.path-mapping.loggers"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.loggers.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Endpoint sensitive flag is no longer customizable as Spring Boot no longer provides a customizable security auto-configuration\n. Create or adapt your security configuration accordingly.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.mappings.enabled",
      "description": "Enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.mappings.enabled"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.mappings.id",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '\/foo').",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "Endpoint identifier is no longer customizable.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.mappings.path",
      "description": "Endpoint URL path.",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.path-mapping.mappings"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.mappings.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Endpoint sensitive flag is no longer customizable as Spring Boot no longer provides a customizable security auto-configuration\n. Create or adapt your security configuration accordingly.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.metrics.enabled",
      "description": "Enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.metrics.enabled"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.metrics.filter.counter-submissions",
      "description": "Submissions that should be made to the counter.",
      "deprecation": {
        "reason": "Metrics support is now using Micrometer.",
        "level": "error"
      }
    },
    {
      "defaultValue": true,
      "deprecated": true,
      "name": "endpoints.metrics.filter.enabled",
      "description": "Whether to enable the metrics servlet filter.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Metrics support is now using Micrometer.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.metrics.filter.gauge-submissions",
      "description": "Submissions that should be made to the gauge.",
      "deprecation": {
        "reason": "Metrics support is now using Micrometer.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.metrics.id",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '\/foo').",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "Endpoint identifier is no longer customizable.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.metrics.path",
      "description": "Endpoint URL path.",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.path-mapping.metrics"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.metrics.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Endpoint sensitive flag is no longer customizable as Spring Boot no longer provides a customizable security auto-configuration\n. Create or adapt your security configuration accordingly.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.sensitive",
      "description": "Default endpoint sensitive setting.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Endpoint sensitive flag is no longer customizable as Spring Boot no longer provides a customizable security auto-configuration\n. Create or adapt your security configuration accordingly.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.shutdown.enabled",
      "description": "Enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.shutdown.enabled"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.shutdown.id",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '\/foo').",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "Endpoint identifier is no longer customizable.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.shutdown.path",
      "description": "Endpoint URL path.",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.path-mapping.shutdown"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.shutdown.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Endpoint sensitive flag is no longer customizable as Spring Boot no longer provides a customizable security auto-configuration\n. Create or adapt your security configuration accordingly.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.trace.enabled",
      "description": "Enable the endpoint.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.httptrace.enabled"
      }
    },
    {
      "defaultValue": true,
      "deprecated": true,
      "name": "endpoints.trace.filter.enabled",
      "description": "Enable the trace servlet filter.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.trace.http.enabled"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.trace.id",
      "description": "Endpoint identifier. With HTTP monitoring the identifier of the endpoint is mapped\n to a URL (e.g. 'foo' is mapped to '\/foo').",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "Endpoint identifier is no longer customizable.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.trace.path",
      "description": "Endpoint URL path.",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoints.web.path-mapping.httptrace"
      }
    },
    {
      "deprecated": true,
      "name": "endpoints.trace.sensitive",
      "description": "Mark if the endpoint exposes sensitive information.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Endpoint sensitive flag is no longer customizable as Spring Boot no longer provides a customizable security auto-configuration\n. Create or adapt your security configuration accordingly.",
        "level": "error"
      }
    },
    {
      "name": "info",
      "description": "Arbitrary properties to add to the info endpoint.",
      "type": "java.util.Map<java.lang.String,java.lang.Object>"
    },
    {
      "deprecated": true,
      "name": "jolokia.config",
      "description": "Jolokia settings. These are traditionally set using servlet parameters. Refer to\n the documentation of Jolokia for more details.",
      "type": "java.util.Map<java.lang.String,java.lang.String>",
      "deprecation": {
        "level": "error",
        "replacement": "management.endpoint.jolokia.config"
      }
    },
    {
      "defaultValue": true,
      "deprecated": true,
      "name": "management.add-application-context-header",
      "description": "Add the \"X-Application-Context\" HTTP header in each response.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.server.add-application-context-header"
      }
    },
    {
      "deprecated": true,
      "name": "management.address",
      "description": "Network address that the management endpoints should bind to.",
      "type": "java.net.InetAddress",
      "deprecation": {
        "level": "error",
        "replacement": "management.server.address"
      }
    },
    {
      "defaultValue": true,
      "name": "management.cloudfoundry.enabled",
      "description": "Whether to enable extended Cloud Foundry actuator endpoints.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": false,
      "name": "management.cloudfoundry.skip-ssl-validation",
      "description": "Whether to skip SSL verification for Cloud Foundry actuator endpoint security calls.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": "",
      "deprecated": true,
      "name": "management.context-path",
      "description": "Management endpoint context-path.",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.server.servlet.context-path"
      }
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
      "defaultValue": "0ms",
      "name": "management.endpoint.conditions.cache.time-to-live",
      "description": "Maximum time that a response can be cached.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
      "defaultValue": true,
      "name": "management.endpoint.conditions.enabled",
      "description": "Whether to enable the conditions endpoint.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
      "defaultValue": [
        "password",
        "secret",
        "key",
        "token",
        ".*credentials.*",
        "vcap_services",
        "sun.java.command"
      ],
      "name": "management.endpoint.configprops.keys-to-sanitize",
      "description": "Keys that should be sanitized. Keys can be simple strings that the property ends with or regular expressions.",
      "type": "java.lang.String[]"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
      "defaultValue": [
        "password",
        "secret",
        "key",
        "token",
        ".*credentials.*",
        "vcap_services",
        "sun.java.command"
      ],
      "name": "management.endpoint.env.keys-to-sanitize",
      "description": "Keys that should be sanitized. Keys can be simple strings that the property ends with or regular expressions.",
      "type": "java.lang.String[]"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
      "name": "management.endpoint.health.roles",
      "description": "Roles used to determine whether or not a user is authorized to be shown details. When empty, all authenticated users are authorized.",
      "type": "java.util.Set<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
      "defaultValue": "never",
      "name": "management.endpoint.health.show-details",
      "description": "When to show full health details.",
      "type": "org.springframework.boot.actuate.health.ShowDetails"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.jolokia.JolokiaProperties",
      "name": "management.endpoint.jolokia.config",
      "description": "Jolokia settings. Refer to the documentation of Jolokia for more details.",
      "type": "java.util.Map<java.lang.String,java.lang.String>"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.jolokia.JolokiaEndpoint",
      "defaultValue": true,
      "name": "management.endpoint.jolokia.enabled",
      "description": "Whether to enable the jolokia endpoint.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties",
      "name": "management.endpoint.logfile.external-file",
      "description": "External Logfile to be accessed. Can be used if the logfile is written by output redirect and not by the logging system itself.",
      "type": "java.io.File"
    },
    {
      "name": "management.endpoints.enabled-by-default",
      "description": "Whether to enable or disable all endpoints by default.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties",
      "defaultValue": "org.springframework.boot",
      "name": "management.endpoints.jmx.domain",
      "description": "Endpoints JMX domain name. Fallback to 'spring.jmx.default-domain' if set.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties$Exposure",
      "name": "management.endpoints.jmx.exposure.exclude",
      "description": "Endpoint IDs that should be excluded or '*' for all.",
      "type": "java.util.Set<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties$Exposure",
      "defaultValue": "*",
      "name": "management.endpoints.jmx.exposure.include",
      "description": "Endpoint IDs that should be included or '*' for all.",
      "type": "java.util.Set<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties",
      "name": "management.endpoints.jmx.static-names",
      "description": "Additional static properties to append to all ObjectNames of MBeans representing Endpoints.",
      "type": "java.util.Properties"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.jmx.JmxEndpointProperties",
      "defaultValue": false,
      "name": "management.endpoints.jmx.unique-names",
      "description": "Whether to ensure that ObjectNames are modified in case of conflict.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
      "defaultValue": "\/actuator",
      "name": "management.endpoints.web.base-path",
      "description": "Base path for Web endpoints. Relative to server.servlet.context-path or management.server.servlet.context-path if management.server.port is configured.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
      "name": "management.endpoints.web.cors.allow-credentials",
      "description": "Whether credentials are supported. When not set, credentials are not supported.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
      "name": "management.endpoints.web.cors.allowed-headers",
      "description": "Comma-separated list of headers to allow in a request. '*' allows all headers.",
      "type": "java.util.List<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
      "name": "management.endpoints.web.cors.allowed-methods",
      "description": "Comma-separated list of methods to allow. '*' allows all methods. When not set, defaults to GET.",
      "type": "java.util.List<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
      "name": "management.endpoints.web.cors.allowed-origins",
      "description": "Comma-separated list of origins to allow. '*' allows all origins. When not set, CORS support is disabled.",
      "type": "java.util.List<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
      "name": "management.endpoints.web.cors.exposed-headers",
      "description": "Comma-separated list of headers to include in a response.",
      "type": "java.util.List<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
      "defaultValue": "1800s",
      "name": "management.endpoints.web.cors.max-age",
      "description": "How long the response from a pre-flight request can be cached by clients. If a duration suffix is not specified, seconds will be used.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
      "name": "management.endpoints.web.exposure.exclude",
      "description": "Endpoint IDs that should be excluded or '*' for all.",
      "type": "java.util.Set<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
      "defaultValue": [
        "health",
        "info"
      ],
      "name": "management.endpoints.web.exposure.include",
      "description": "Endpoint IDs that should be included or '*' for all.",
      "type": "java.util.Set<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
      "name": "management.endpoints.web.path-mapping",
      "description": "Mapping between endpoint IDs and the path that should expose them.",
      "type": "java.util.Map<java.lang.String,java.lang.String>"
    },
    {
      "defaultValue": true,
      "name": "management.health.cassandra.enabled",
      "description": "Whether to enable Cassandra health check.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": true,
      "name": "management.health.couchbase.enabled",
      "description": "Whether to enable Couchbase health check.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.couchbase.CouchbaseHealthIndicatorProperties",
      "defaultValue": "1000ms",
      "deprecated": true,
      "name": "management.health.couchbase.timeout",
      "description": "Timeout for getting the Bucket information from the server.",
      "type": "java.time.Duration",
      "deprecation": {}
    },
    {
      "defaultValue": true,
      "name": "management.health.db.enabled",
      "description": "Whether to enable database health check.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": true,
      "name": "management.health.defaults.enabled",
      "description": "Whether to enable default health indicators.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": true,
      "name": "management.health.diskspace.enabled",
      "description": "Whether to enable disk space health check.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
      "name": "management.health.diskspace.path",
      "description": "Path used to compute the available disk space.",
      "type": "java.io.File"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
      "defaultValue": 0,
      "name": "management.health.diskspace.threshold",
      "description": "Minimum disk space, in bytes, that should be available.",
      "type": "java.lang.Long"
    },
    {
      "defaultValue": true,
      "name": "management.health.elasticsearch.enabled",
      "description": "Whether to enable Elasticsearch health check.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.elasticsearch.ElasticsearchHealthIndicatorProperties",
      "name": "management.health.elasticsearch.indices",
      "description": "Comma-separated index names.",
      "type": "java.util.List<java.lang.String>"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.elasticsearch.ElasticsearchHealthIndicatorProperties",
      "defaultValue": "100ms",
      "name": "management.health.elasticsearch.response-timeout",
      "description": "Time to wait for a response from the cluster.",
      "type": "java.time.Duration"
    },
    {
      "defaultValue": true,
      "name": "management.health.influxdb.enabled",
      "description": "Whether to enable InfluxDB health check.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": true,
      "name": "management.health.jms.enabled",
      "description": "Whether to enable JMS health check.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": true,
      "name": "management.health.ldap.enabled",
      "description": "Whether to enable LDAP health check.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": true,
      "name": "management.health.mail.enabled",
      "description": "Whether to enable Mail health check.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": true,
      "name": "management.health.mongo.enabled",
      "description": "Whether to enable MongoDB health check.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": true,
      "name": "management.health.neo4j.enabled",
      "description": "Whether to enable Neo4j health check.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": true,
      "name": "management.health.rabbit.enabled",
      "description": "Whether to enable RabbitMQ health check.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": true,
      "name": "management.health.redis.enabled",
      "description": "Whether to enable Redis health check.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": true,
      "name": "management.health.solr.enabled",
      "description": "Whether to enable Solr health check.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties",
      "name": "management.health.status.http-mapping",
      "description": "Mapping of health statuses to HTTP status codes. By default, registered health statuses map to sensible defaults (for example, UP maps to 200).",
      "type": "java.util.Map<java.lang.String,java.lang.Integer>"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.health.HealthIndicatorProperties",
      "defaultValue": [
        "DOWN",
        "OUT_OF_SERVICE",
        "UP",
        "UNKNOWN"
      ],
      "name": "management.health.status.order",
      "description": "Comma-separated list of health statuses in order of severity.",
      "type": "java.util.List<java.lang.String>"
    },
    {
      "defaultValue": true,
      "name": "management.info.build.enabled",
      "description": "Whether to enable build info.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": true,
      "name": "management.info.defaults.enabled",
      "description": "Whether to enable default info contributors.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": true,
      "name": "management.info.env.enabled",
      "description": "Whether to enable environment info.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": true,
      "name": "management.info.git.enabled",
      "description": "Whether to enable git info.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git",
      "defaultValue": "simple",
      "name": "management.info.git.mode",
      "description": "Mode to use to expose git information.",
      "type": "org.springframework.boot.actuate.info.InfoPropertiesInfoContributor$Mode"
    },
    {
      "defaultValue": true,
      "name": "management.metrics.binders.files.enabled",
      "description": "Whether to enable files metrics.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": true,
      "name": "management.metrics.binders.jvm.enabled",
      "description": "Whether to enable JVM metrics.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": true,
      "name": "management.metrics.binders.logback.enabled",
      "description": "Whether to enable Logback metrics.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": true,
      "name": "management.metrics.binders.processor.enabled",
      "description": "Whether to enable processor metrics.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": true,
      "name": "management.metrics.binders.uptime.enabled",
      "description": "Whether to enable uptime metrics.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution",
      "name": "management.metrics.distribution.percentiles",
      "description": "Specific computed non-aggregable percentiles to ship to the backend for meter IDs starting-with the specified name. The longest match wins, the key `all` can also be used to configure all meters.",
      "type": "java.util.Map<java.lang.String,double[]>"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution",
      "name": "management.metrics.distribution.percentiles-histogram",
      "description": "Whether meter IDs starting with the specified name should publish percentile histograms. For monitoring systems that support aggregable percentile calculation based on a histogram, this can be set to true. For other systems, this has no effect. The longest match wins, the key `all` can also be used to configure all meters.",
      "type": "java.util.Map<java.lang.String,java.lang.Boolean>"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution",
      "name": "management.metrics.distribution.sla",
      "description": "Specific SLA boundaries for meter IDs starting-with the specified name. The longest match wins, the key `all` can also be used to configure all meters. Counters will be published for each specified boundary. Values can be specified as a long or as a Duration value (for timer meters, defaulting to ms if no unit specified).",
      "type": "java.util.Map<java.lang.String,org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelAgreementBoundary[]>"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
      "name": "management.metrics.enable",
      "description": "Whether meter IDs starting-with the specified name should be enabled. The longest match wins, the key `all` can also be used to configure all meters.",
      "type": "java.util.Map<java.lang.String,java.lang.Boolean>"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": 10000,
      "name": "management.metrics.export.atlas.batch-size",
      "description": "Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": "10s",
      "name": "management.metrics.export.atlas.config-refresh-frequency",
      "description": "Frequency for refreshing config settings from the LWC service.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": "150s",
      "name": "management.metrics.export.atlas.config-time-to-live",
      "description": "Time to live for subscriptions from the LWC service.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": "http:\/\/localhost:7101\/lwc\/api\/v1\/expressions\/local-dev",
      "name": "management.metrics.export.atlas.config-uri",
      "description": "URI for the Atlas LWC endpoint to retrieve current subscriptions.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": "1s",
      "name": "management.metrics.export.atlas.connect-timeout",
      "description": "Connection timeout for requests to this backend.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": true,
      "name": "management.metrics.export.atlas.enabled",
      "description": "Whether exporting of metrics to this backend is enabled.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": "http:\/\/localhost:7101\/lwc\/api\/v1\/evaluate",
      "name": "management.metrics.export.atlas.eval-uri",
      "description": "URI for the Atlas LWC endpoint to evaluate the data for a subscription.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": false,
      "name": "management.metrics.export.atlas.lwc-enabled",
      "description": "Whether to enable streaming to Atlas LWC.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": "15m",
      "name": "management.metrics.export.atlas.meter-time-to-live",
      "description": "Time to live for meters that do not have any activity. After this period the meter will be considered expired and will not get reported.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": 2,
      "name": "management.metrics.export.atlas.num-threads",
      "description": "Number of threads to use with the metrics publishing scheduler.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": "10s",
      "name": "management.metrics.export.atlas.read-timeout",
      "description": "Read timeout for requests to this backend.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": "1m",
      "name": "management.metrics.export.atlas.step",
      "description": "Step size (i.e. reporting frequency) to use.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.atlas.AtlasProperties",
      "defaultValue": "http:\/\/localhost:7101\/api\/v1\/publish",
      "name": "management.metrics.export.atlas.uri",
      "description": "URI of the Atlas server.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "name": "management.metrics.export.datadog.api-key",
      "description": "Datadog API key.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "name": "management.metrics.export.datadog.application-key",
      "description": "Datadog application key. Not strictly required, but improves the Datadog experience by sending meter descriptions, types, and base units to Datadog.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "defaultValue": 10000,
      "name": "management.metrics.export.datadog.batch-size",
      "description": "Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "defaultValue": "1s",
      "name": "management.metrics.export.datadog.connect-timeout",
      "description": "Connection timeout for requests to this backend.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "defaultValue": true,
      "name": "management.metrics.export.datadog.descriptions",
      "description": "Whether to publish descriptions metadata to Datadog. Turn this off to minimize the amount of metadata sent.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "defaultValue": true,
      "name": "management.metrics.export.datadog.enabled",
      "description": "Whether exporting of metrics to this backend is enabled.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "defaultValue": "instance",
      "name": "management.metrics.export.datadog.host-tag",
      "description": "Tag that will be mapped to \"host\" when shipping metrics to Datadog.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "defaultValue": 2,
      "name": "management.metrics.export.datadog.num-threads",
      "description": "Number of threads to use with the metrics publishing scheduler.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "defaultValue": "10s",
      "name": "management.metrics.export.datadog.read-timeout",
      "description": "Read timeout for requests to this backend.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "defaultValue": "1m",
      "name": "management.metrics.export.datadog.step",
      "description": "Step size (i.e. reporting frequency) to use.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.datadog.DatadogProperties",
      "defaultValue": "https:\/\/app.datadoghq.com",
      "name": "management.metrics.export.datadog.uri",
      "description": "URI to ship metrics to. If you need to publish metrics to an internal proxy en-route to Datadog, you can define the location of the proxy with this.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "defaultValue": "multicast",
      "name": "management.metrics.export.ganglia.addressing-mode",
      "description": "UDP addressing mode, either unicast or multicast.",
      "type": "info.ganglia.gmetric4j.gmetric.GMetric$UDPAddressingMode"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "defaultValue": "milliseconds",
      "name": "management.metrics.export.ganglia.duration-units",
      "description": "Base time unit used to report durations.",
      "type": "java.util.concurrent.TimeUnit"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "defaultValue": true,
      "name": "management.metrics.export.ganglia.enabled",
      "description": "Whether exporting of metrics to Ganglia is enabled.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "defaultValue": "localhost",
      "name": "management.metrics.export.ganglia.host",
      "description": "Host of the Ganglia server to receive exported metrics.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "defaultValue": 8649,
      "name": "management.metrics.export.ganglia.port",
      "description": "Port of the Ganglia server to receive exported metrics.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "defaultValue": "3.1",
      "name": "management.metrics.export.ganglia.protocol-version",
      "description": "Ganglia protocol version. Must be either 3.1 or 3.0.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "defaultValue": "seconds",
      "name": "management.metrics.export.ganglia.rate-units",
      "description": "Base time unit used to report rates.",
      "type": "java.util.concurrent.TimeUnit"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "defaultValue": "1m",
      "name": "management.metrics.export.ganglia.step",
      "description": "Step size (i.e. reporting frequency) to use.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.ganglia.GangliaProperties",
      "defaultValue": 1,
      "name": "management.metrics.export.ganglia.time-to-live",
      "description": "Time to live for metrics on Ganglia. Set the multi-cast Time-To-Live to be one greater than the number of hops (routers) between the hosts.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties",
      "defaultValue": "milliseconds",
      "name": "management.metrics.export.graphite.duration-units",
      "description": "Base time unit used to report durations.",
      "type": "java.util.concurrent.TimeUnit"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties",
      "defaultValue": true,
      "name": "management.metrics.export.graphite.enabled",
      "description": "Whether exporting of metrics to Graphite is enabled.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties",
      "defaultValue": "localhost",
      "name": "management.metrics.export.graphite.host",
      "description": "Host of the Graphite server to receive exported metrics.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties",
      "defaultValue": 2004,
      "name": "management.metrics.export.graphite.port",
      "description": "Port of the Graphite server to receive exported metrics.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties",
      "defaultValue": "pickled",
      "name": "management.metrics.export.graphite.protocol",
      "description": "Protocol to use while shipping data to Graphite.",
      "type": "io.micrometer.graphite.GraphiteProtocol"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties",
      "defaultValue": "seconds",
      "name": "management.metrics.export.graphite.rate-units",
      "description": "Base time unit used to report rates.",
      "type": "java.util.concurrent.TimeUnit"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties",
      "defaultValue": "1m",
      "name": "management.metrics.export.graphite.step",
      "description": "Step size (i.e. reporting frequency) to use.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.graphite.GraphiteProperties",
      "defaultValue": [],
      "name": "management.metrics.export.graphite.tags-as-prefix",
      "description": "For the default naming convention, turn the specified tag keys into part of the metric prefix.",
      "type": "java.lang.String[]"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": true,
      "name": "management.metrics.export.influx.auto-create-db",
      "description": "Whether to create the Influx database if it does not exist before attempting to publish metrics to it.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": 10000,
      "name": "management.metrics.export.influx.batch-size",
      "description": "Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": true,
      "name": "management.metrics.export.influx.compressed",
      "description": "Whether to enable GZIP compression of metrics batches published to Influx.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": "1s",
      "name": "management.metrics.export.influx.connect-timeout",
      "description": "Connection timeout for requests to this backend.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": "one",
      "name": "management.metrics.export.influx.consistency",
      "description": "Write consistency for each point.",
      "type": "io.micrometer.influx.InfluxConsistency"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": "mydb",
      "name": "management.metrics.export.influx.db",
      "description": "Tag that will be mapped to \"host\" when shipping metrics to Influx.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": true,
      "name": "management.metrics.export.influx.enabled",
      "description": "Whether exporting of metrics to this backend is enabled.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": 2,
      "name": "management.metrics.export.influx.num-threads",
      "description": "Number of threads to use with the metrics publishing scheduler.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "name": "management.metrics.export.influx.password",
      "description": "Login password of the Influx server.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": "10s",
      "name": "management.metrics.export.influx.read-timeout",
      "description": "Read timeout for requests to this backend.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "name": "management.metrics.export.influx.retention-duration",
      "description": "Time period for which Influx should retain data in the current database. For instance 7d, check the influx documentation for more details on the duration format.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "name": "management.metrics.export.influx.retention-policy",
      "description": "Retention policy to use (Influx writes to the DEFAULT retention policy if one is not specified).",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "name": "management.metrics.export.influx.retention-replication-factor",
      "description": "How many copies of the data are stored in the cluster. Must be 1 for a single node instance.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "name": "management.metrics.export.influx.retention-shard-duration",
      "description": "Time range covered by a shard group. For instance 2w, check the influx documentation for more details on the duration format.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": "1m",
      "name": "management.metrics.export.influx.step",
      "description": "Step size (i.e. reporting frequency) to use.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "defaultValue": "http:\/\/localhost:8086",
      "name": "management.metrics.export.influx.uri",
      "description": "URI of the Influx server.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.influx.InfluxProperties",
      "name": "management.metrics.export.influx.user-name",
      "description": "Login user of the Influx server.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.jmx.JmxProperties",
      "defaultValue": "metrics",
      "name": "management.metrics.export.jmx.domain",
      "description": "Metrics JMX domain name.",
      "type": "java.lang.String"
    },
    {
      "defaultValue": true,
      "name": "management.metrics.export.jmx.enabled",
      "description": "Whether exporting of metrics to JMX is enabled.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.jmx.JmxProperties",
      "defaultValue": "1m",
      "name": "management.metrics.export.jmx.step",
      "description": "Step size (i.e. reporting frequency) to use.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties",
      "name": "management.metrics.export.newrelic.account-id",
      "description": "New Relic account ID.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties",
      "name": "management.metrics.export.newrelic.api-key",
      "description": "New Relic API key.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties",
      "defaultValue": 10000,
      "name": "management.metrics.export.newrelic.batch-size",
      "description": "Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties",
      "defaultValue": "1s",
      "name": "management.metrics.export.newrelic.connect-timeout",
      "description": "Connection timeout for requests to this backend.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties",
      "defaultValue": true,
      "name": "management.metrics.export.newrelic.enabled",
      "description": "Whether exporting of metrics to this backend is enabled.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties",
      "defaultValue": 2,
      "name": "management.metrics.export.newrelic.num-threads",
      "description": "Number of threads to use with the metrics publishing scheduler.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties",
      "defaultValue": "10s",
      "name": "management.metrics.export.newrelic.read-timeout",
      "description": "Read timeout for requests to this backend.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties",
      "defaultValue": "1m",
      "name": "management.metrics.export.newrelic.step",
      "description": "Step size (i.e. reporting frequency) to use.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.newrelic.NewRelicProperties",
      "defaultValue": "https:\/\/insights-collector.newrelic.com",
      "name": "management.metrics.export.newrelic.uri",
      "description": "URI to ship metrics to.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties",
      "defaultValue": true,
      "name": "management.metrics.export.prometheus.descriptions",
      "description": "Whether to enable publishing descriptions as part of the scrape payload to Prometheus. Turn this off to minimize the amount of data sent on each scrape.",
      "type": "java.lang.Boolean"
    },
    {
      "defaultValue": true,
      "name": "management.metrics.export.prometheus.enabled",
      "description": "Whether exporting of metrics to Prometheus is enabled.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties",
      "defaultValue": "1m",
      "name": "management.metrics.export.prometheus.step",
      "description": "Step size (i.e. reporting frequency) to use.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties",
      "name": "management.metrics.export.signalfx.access-token",
      "description": "SignalFX access token.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties",
      "defaultValue": 10000,
      "name": "management.metrics.export.signalfx.batch-size",
      "description": "Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties",
      "defaultValue": "1s",
      "name": "management.metrics.export.signalfx.connect-timeout",
      "description": "Connection timeout for requests to this backend.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties",
      "defaultValue": true,
      "name": "management.metrics.export.signalfx.enabled",
      "description": "Whether exporting of metrics to this backend is enabled.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties",
      "defaultValue": 2,
      "name": "management.metrics.export.signalfx.num-threads",
      "description": "Number of threads to use with the metrics publishing scheduler.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties",
      "defaultValue": "10s",
      "name": "management.metrics.export.signalfx.read-timeout",
      "description": "Read timeout for requests to this backend.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties",
      "name": "management.metrics.export.signalfx.source",
      "description": "Uniquely identifies the app instance that is publishing metrics to SignalFx. Defaults to the local host name.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties",
      "defaultValue": "10s",
      "name": "management.metrics.export.signalfx.step",
      "description": "Step size (i.e. reporting frequency) to use.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.signalfx.SignalFxProperties",
      "defaultValue": "https:\/\/ingest.signalfx.com",
      "name": "management.metrics.export.signalfx.uri",
      "description": "URI to ship metrics to.",
      "type": "java.lang.String"
    },
    {
      "defaultValue": true,
      "name": "management.metrics.export.simple.enabled",
      "description": "Whether, in the absence of any other exporter, exporting of metrics to an in-memory backend is enabled.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
      "defaultValue": "cumulative",
      "name": "management.metrics.export.simple.mode",
      "description": "Counting mode.",
      "type": "io.micrometer.core.instrument.simple.CountingMode"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
      "defaultValue": "1m",
      "name": "management.metrics.export.simple.step",
      "description": "Step size (i.e. reporting frequency) to use.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties",
      "defaultValue": true,
      "name": "management.metrics.export.statsd.enabled",
      "description": "Whether exporting of metrics to StatsD is enabled.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties",
      "defaultValue": "datadog",
      "name": "management.metrics.export.statsd.flavor",
      "description": "StatsD line protocol to use.",
      "type": "io.micrometer.statsd.StatsdFlavor"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties",
      "defaultValue": "localhost",
      "name": "management.metrics.export.statsd.host",
      "description": "Host of the StatsD server to receive exported metrics.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties",
      "defaultValue": 1400,
      "name": "management.metrics.export.statsd.max-packet-length",
      "description": "Total length of a single payload should be kept within your network's MTU.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties",
      "defaultValue": "10s",
      "name": "management.metrics.export.statsd.polling-frequency",
      "description": "How often gauges will be polled. When a gauge is polled, its value is recalculated and if the value has changed (or publishUnchangedMeters is true), it is sent to the StatsD server.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties",
      "defaultValue": 8125,
      "name": "management.metrics.export.statsd.port",
      "description": "Port of the StatsD server to receive exported metrics.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties",
      "defaultValue": true,
      "name": "management.metrics.export.statsd.publish-unchanged-meters",
      "description": "Whether to send unchanged meters to the StatsD server.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.statsd.StatsdProperties",
      "defaultValue": 2147483647,
      "deprecated": true,
      "name": "management.metrics.export.statsd.queue-size",
      "description": "Maximum size of the queue of items waiting to be sent to the StatsD server.",
      "type": "java.lang.Integer",
      "deprecation": {
        "reason": "No longer configurable and an unbounded queue will always be used",
        "level": "error"
      }
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties",
      "name": "management.metrics.export.wavefront.api-token",
      "description": "API token used when publishing metrics directly to the Wavefront API host.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties",
      "defaultValue": 10000,
      "name": "management.metrics.export.wavefront.batch-size",
      "description": "Number of measurements per request to use for this backend. If more measurements are found, then multiple requests will be made.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties",
      "defaultValue": "1s",
      "name": "management.metrics.export.wavefront.connect-timeout",
      "description": "Connection timeout for requests to this backend.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties",
      "defaultValue": true,
      "name": "management.metrics.export.wavefront.enabled",
      "description": "Whether exporting of metrics to this backend is enabled.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties",
      "name": "management.metrics.export.wavefront.global-prefix",
      "description": "Global prefix to separate metrics originating from this app's white box instrumentation from those originating from other Wavefront integrations when viewed in the Wavefront UI.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties",
      "defaultValue": 2,
      "name": "management.metrics.export.wavefront.num-threads",
      "description": "Number of threads to use with the metrics publishing scheduler.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties",
      "defaultValue": "10s",
      "name": "management.metrics.export.wavefront.read-timeout",
      "description": "Read timeout for requests to this backend.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties",
      "name": "management.metrics.export.wavefront.source",
      "description": "Unique identifier for the app instance that is the source of metrics being published to Wavefront. Defaults to the local host name.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties",
      "defaultValue": "10s",
      "name": "management.metrics.export.wavefront.step",
      "description": "Step size (i.e. reporting frequency) to use.",
      "type": "java.time.Duration"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.export.wavefront.WavefrontProperties",
      "defaultValue": "https:\/\/longboard.wavefront.com",
      "name": "management.metrics.export.wavefront.uri",
      "description": "URI to ship metrics to.",
      "type": "java.net.URI"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
      "defaultValue": true,
      "name": "management.metrics.use-global-registry",
      "description": "Whether auto-configured MeterRegistry implementations should be bound to the global static registry on Metrics. For testing, set this to 'false' to maximize test independence.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client",
      "defaultValue": 100,
      "name": "management.metrics.web.client.max-uri-tags",
      "description": "Maximum number of unique URI tag values allowed. After the max number of tag values is reached, metrics with additional tag values are denied by filter.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client",
      "defaultValue": "http.client.requests",
      "name": "management.metrics.web.client.requests-metric-name",
      "description": "Name of the metric for sent requests.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server",
      "defaultValue": true,
      "name": "management.metrics.web.server.auto-time-requests",
      "description": "Whether requests handled by Spring MVC or WebFlux should be automatically timed. If the number of time series emitted grows too large on account of request mapping timings, disable this and use 'Timed' on a per request mapping basis as needed.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server",
      "defaultValue": 100,
      "name": "management.metrics.web.server.max-uri-tags",
      "description": "Maximum number of unique URI tag values allowed. After the max number of tag values is reached, metrics with additional tag values are denied by filter.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server",
      "defaultValue": "http.server.requests",
      "name": "management.metrics.web.server.requests-metric-name",
      "description": "Name of the metric for received requests.",
      "type": "java.lang.String"
    },
    {
      "deprecated": true,
      "name": "management.port",
      "description": "Management endpoint HTTP port. Use the same port as the application by default.",
      "type": "java.lang.Integer",
      "deprecation": {
        "level": "error",
        "replacement": "management.server.port"
      }
    },
    {
      "defaultValue": true,
      "deprecated": true,
      "name": "management.security.enabled",
      "description": "Whether to enable security.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "A global security auto-configuration is now provided. Provide your own WebSecurityConfigurer bean instead.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "management.security.roles",
      "description": "Comma-separated list of roles that can access the management endpoint.",
      "type": "java.util.List<java.lang.String>",
      "deprecation": {
        "reason": "The security auto-configuration is no longer customizable. Provide your own WebSecurityConfigurer bean instead.",
        "level": "error"
      }
    },
    {
      "defaultValue": "stateless",
      "deprecated": true,
      "name": "management.security.sessions",
      "description": "Session creating policy for security use (always, never, if_required,\n stateless).",
      "deprecation": {
        "reason": "The security auto-configuration is no longer customizable. Provide your own WebSecurityConfigurer bean instead.",
        "level": "error"
      }
    },
    {
      "defaultValue": false,
      "name": "management.server.add-application-context-header",
      "description": "Add the \"X-Application-Context\" HTTP header in each response.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
      "name": "management.server.address",
      "description": "Network address to which the management endpoints should bind. Requires a custom management.server.port.",
      "type": "java.net.InetAddress"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
      "name": "management.server.port",
      "description": "Management endpoint HTTP port (uses the same port as the application by default). Configure a different port to use management-specific SSL.",
      "type": "java.lang.Integer"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties$Servlet",
      "defaultValue": "",
      "name": "management.server.servlet.context-path",
      "description": "Management endpoint context-path (for instance, `\/management`). Requires a custom management.server.port.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.web.server.Ssl",
      "name": "management.server.ssl.ciphers",
      "description": "Supported SSL ciphers.",
      "type": "java.lang.String[]"
    },
    {
      "sourceType": "org.springframework.boot.web.server.Ssl",
      "name": "management.server.ssl.client-auth",
      "description": "Whether client authentication is wanted (\"want\") or needed (\"need\"). Requires a trust store.",
      "type": "org.springframework.boot.web.server.Ssl$ClientAuth"
    },
    {
      "sourceType": "org.springframework.boot.web.server.Ssl",
      "defaultValue": true,
      "name": "management.server.ssl.enabled",
      "description": "Whether to enable SSL support.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.web.server.Ssl",
      "name": "management.server.ssl.enabled-protocols",
      "description": "Enabled SSL protocols.",
      "type": "java.lang.String[]"
    },
    {
      "sourceType": "org.springframework.boot.web.server.Ssl",
      "name": "management.server.ssl.key-alias",
      "description": "Alias that identifies the key in the key store.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.web.server.Ssl",
      "name": "management.server.ssl.key-password",
      "description": "Password used to access the key in the key store.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.web.server.Ssl",
      "name": "management.server.ssl.key-store",
      "description": "Path to the key store that holds the SSL certificate (typically a jks file).",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.web.server.Ssl",
      "name": "management.server.ssl.key-store-password",
      "description": "Password used to access the key store.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.web.server.Ssl",
      "name": "management.server.ssl.key-store-provider",
      "description": "Provider for the key store.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.web.server.Ssl",
      "name": "management.server.ssl.key-store-type",
      "description": "Type of the key store.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.web.server.Ssl",
      "defaultValue": "TLS",
      "name": "management.server.ssl.protocol",
      "description": "SSL protocol to use.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.web.server.Ssl",
      "name": "management.server.ssl.trust-store",
      "description": "Trust store that holds SSL certificates.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.web.server.Ssl",
      "name": "management.server.ssl.trust-store-password",
      "description": "Password used to access the trust store.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.web.server.Ssl",
      "name": "management.server.ssl.trust-store-provider",
      "description": "Provider for the trust store.",
      "type": "java.lang.String"
    },
    {
      "sourceType": "org.springframework.boot.web.server.Ssl",
      "name": "management.server.ssl.trust-store-type",
      "description": "Type of the trust store.",
      "type": "java.lang.String"
    },
    {
      "defaultValue": "my-domain",
      "deprecated": true,
      "name": "management.shell.auth.jaas.domain",
      "description": "JAAS domain.",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "CRaSH support is no longer available.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "management.shell.auth.key.path",
      "description": "Path to the authentication key. This should point to a valid \".pem\" file.",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "CRaSH support is no longer available.",
        "level": "error"
      }
    },
    {
      "defaultValue": "user",
      "deprecated": true,
      "name": "management.shell.auth.simple.user.name",
      "description": "Login user.",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "CRaSH support is no longer available.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "management.shell.auth.simple.user.password",
      "description": "Login password.",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "CRaSH support is no longer available.",
        "level": "error"
      }
    },
    {
      "defaultValue": [
        "ACTUATOR"
      ],
      "deprecated": true,
      "name": "management.shell.auth.spring.roles",
      "description": "Comma-separated list of required roles to login to the CRaSH console.",
      "type": "java.lang.String[]",
      "deprecation": {
        "reason": "CRaSH support is no longer available.",
        "level": "error"
      }
    },
    {
      "defaultValue": "simple",
      "deprecated": true,
      "name": "management.shell.auth.type",
      "description": "Authentication type. Auto-detected according to the environment (i.e. if Spring\n Security is available, \"spring\" is used by default).",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "CRaSH support is no longer available.",
        "level": "error"
      }
    },
    {
      "defaultValue": [
        "classpath*:\/commands\/**",
        "classpath*:\/crash\/commands\/**"
      ],
      "deprecated": true,
      "name": "management.shell.command-path-patterns",
      "description": "Patterns to use to look for commands.",
      "type": "java.lang.String[]",
      "deprecation": {
        "reason": "CRaSH support is no longer available.",
        "level": "error"
      }
    },
    {
      "defaultValue": -1,
      "deprecated": true,
      "name": "management.shell.command-refresh-interval",
      "description": "Scan for changes and update the command if necessary (in seconds).",
      "type": "java.lang.Integer",
      "deprecation": {
        "reason": "CRaSH support is no longer available.",
        "level": "error"
      }
    },
    {
      "defaultValue": [
        "classpath*:\/crash\/*"
      ],
      "deprecated": true,
      "name": "management.shell.config-path-patterns",
      "description": "Patterns to use to look for configurations.",
      "type": "java.lang.String[]",
      "deprecation": {
        "reason": "CRaSH support is no longer available.",
        "level": "error"
      }
    },
    {
      "defaultValue": [
        "jpa*",
        "jdbc*",
        "jndi*"
      ],
      "deprecated": true,
      "name": "management.shell.disabled-commands",
      "description": "Comma-separated list of commands to disable.",
      "type": "java.lang.String[]",
      "deprecation": {
        "reason": "CRaSH support is no longer available.",
        "level": "error"
      }
    },
    {
      "defaultValue": [],
      "deprecated": true,
      "name": "management.shell.disabled-plugins",
      "description": "Comma-separated list of plugins to disable. Certain plugins are disabled by default\n based on the environment.",
      "type": "java.lang.String[]",
      "deprecation": {
        "reason": "CRaSH support is no longer available.",
        "level": "error"
      }
    },
    {
      "defaultValue": 600000,
      "deprecated": true,
      "name": "management.shell.ssh.auth-timeout",
      "description": "Number of milliseconds after user will be prompted to login again.",
      "type": "java.lang.Integer",
      "deprecation": {
        "reason": "CRaSH support is no longer available.",
        "level": "error"
      }
    },
    {
      "defaultValue": true,
      "deprecated": true,
      "name": "management.shell.ssh.enabled",
      "description": "Whether to enable CRaSH SSH support.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "CRaSH support is no longer available.",
        "level": "error"
      }
    },
    {
      "defaultValue": 600000,
      "deprecated": true,
      "name": "management.shell.ssh.idle-timeout",
      "description": "Number of milliseconds after which unused connections are closed.",
      "type": "java.lang.Integer",
      "deprecation": {
        "reason": "CRaSH support is no longer available.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "management.shell.ssh.key-path",
      "description": "Path to the SSH server key.",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "CRaSH support is no longer available.",
        "level": "error"
      }
    },
    {
      "defaultValue": 2000,
      "deprecated": true,
      "name": "management.shell.ssh.port",
      "description": "SSH port.",
      "type": "java.lang.Integer",
      "deprecation": {
        "reason": "CRaSH support is no longer available.",
        "level": "error"
      }
    },
    {
      "defaultValue": false,
      "deprecated": true,
      "name": "management.shell.telnet.enabled",
      "description": "Whether to enable CRaSH telnet support. Enabled by default if the TelnetPlugin is available.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "CRaSH support is no longer available.",
        "level": "error"
      }
    },
    {
      "defaultValue": 5000,
      "deprecated": true,
      "name": "management.shell.telnet.port",
      "description": "Telnet port.",
      "type": "java.lang.Integer",
      "deprecation": {
        "reason": "CRaSH support is no longer available.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "management.ssl.ciphers",
      "type": "java.lang.String[]",
      "deprecation": {
        "level": "error",
        "replacement": "management.server.ssl.ciphers"
      }
    },
    {
      "deprecated": true,
      "name": "management.ssl.client-auth",
      "deprecation": {
        "level": "error",
        "replacement": "management.server.ssl.client-auth"
      }
    },
    {
      "deprecated": true,
      "name": "management.ssl.enabled",
      "type": "java.lang.Boolean",
      "deprecation": {
        "level": "error",
        "replacement": "management.server.ssl.enabled"
      }
    },
    {
      "deprecated": true,
      "name": "management.ssl.enabled-protocols",
      "type": "java.lang.String[]",
      "deprecation": {
        "level": "error",
        "replacement": "management.server.ssl.enabled-protocols"
      }
    },
    {
      "deprecated": true,
      "name": "management.ssl.key-alias",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.server.ssl.key-alias"
      }
    },
    {
      "deprecated": true,
      "name": "management.ssl.key-password",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.server.ssl.key-password"
      }
    },
    {
      "deprecated": true,
      "name": "management.ssl.key-store",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.server.ssl.key-store"
      }
    },
    {
      "deprecated": true,
      "name": "management.ssl.key-store-password",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.server.ssl.key-store-password"
      }
    },
    {
      "deprecated": true,
      "name": "management.ssl.key-store-provider",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.server.ssl.key-store-provider"
      }
    },
    {
      "deprecated": true,
      "name": "management.ssl.key-store-type",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.server.ssl.key-store-type"
      }
    },
    {
      "deprecated": true,
      "name": "management.ssl.protocol",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.server.ssl.protocol"
      }
    },
    {
      "deprecated": true,
      "name": "management.ssl.trust-store",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.server.ssl.trust-store"
      }
    },
    {
      "deprecated": true,
      "name": "management.ssl.trust-store-password",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.server.ssl.trust-store-password"
      }
    },
    {
      "deprecated": true,
      "name": "management.ssl.trust-store-provider",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.server.ssl.trust-store-provider"
      }
    },
    {
      "deprecated": true,
      "name": "management.ssl.trust-store-type",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.server.ssl.trust-store-type"
      }
    },
    {
      "defaultValue": true,
      "name": "management.trace.http.enabled",
      "description": "Whether to enable HTTP request-response tracing.",
      "type": "java.lang.Boolean"
    },
    {
      "sourceType": "org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceProperties",
      "defaultValue": [
        "request-headers",
        "response-headers",
        "cookies",
        "errors"
      ],
      "name": "management.trace.http.include",
      "description": "Items to be included in the trace. Defaults to request headers (excluding Authorization but including Cookie), response headers (including Set-Cookie), and time taken.",
      "type": "java.util.Set<org.springframework.boot.actuate.trace.http.Include>"
    },
    {
      "deprecated": true,
      "name": "management.trace.include",
      "deprecation": {
        "level": "error",
        "replacement": "management.trace.http.include"
      }
    },
    {
      "defaultValue": "",
      "deprecated": true,
      "name": "spring.metrics.export.aggregate.key-pattern",
      "description": "Pattern that tells the aggregator what to do with the keys from the source\n repository. The keys in the source repository are assumed to be period\n separated, and the pattern is in the same format, e.g. \"d.d.k.d\". Here \"d\"\n means \"discard\" and \"k\" means \"keep\" the key segment in the corresponding\n position in the source.",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "Metrics support is now using Micrometer.",
        "level": "error"
      }
    },
    {
      "defaultValue": "",
      "deprecated": true,
      "name": "spring.metrics.export.aggregate.prefix",
      "description": "Prefix for global repository if active. Should be unique for this JVM, but most\n useful if it also has the form \"a.b\" where \"a\" is unique to this logical\n process (this application) and \"b\" is unique to this physical process. If you\n set spring.application.name elsewhere, then the default will be in the right\n form.",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "Metrics support is now using Micrometer.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "spring.metrics.export.delay-millis",
      "description": "Delay in milliseconds between export ticks. Metrics are exported to external\n sources on a schedule with this delay.",
      "type": "java.lang.Long",
      "deprecation": {
        "reason": "Metrics support is now using Micrometer.",
        "level": "error"
      }
    },
    {
      "defaultValue": true,
      "deprecated": true,
      "name": "spring.metrics.export.enabled",
      "description": "Flag to enable metric export (assuming a MetricWriter is available).",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Metrics support is now using Micrometer.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "spring.metrics.export.excludes",
      "description": "List of patterns for metric names to exclude. Applied after the includes.",
      "type": "java.lang.String[]",
      "deprecation": {
        "reason": "Metrics support is now using Micrometer.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "spring.metrics.export.includes",
      "description": "List of patterns for metric names to include.",
      "type": "java.lang.String[]",
      "deprecation": {
        "reason": "Metrics support is now using Micrometer.",
        "level": "error"
      }
    },
    {
      "defaultValue": "keys.spring.metrics",
      "deprecated": true,
      "name": "spring.metrics.export.redis.key",
      "description": "Key for redis repository export (if active). Should be globally unique for a\n system sharing a redis repository across multiple processes.",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "Metrics support is now using Micrometer.",
        "level": "error"
      }
    },
    {
      "defaultValue": "spring.metrics",
      "deprecated": true,
      "name": "spring.metrics.export.redis.prefix",
      "description": "Prefix for redis repository if active. Should be globally unique across all\n processes sharing the same repository.",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "Metrics support is now using Micrometer.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "spring.metrics.export.send-latest",
      "description": "Flag to switch off any available optimizations based on not exporting unchanged\n metric values.",
      "type": "java.lang.Boolean",
      "deprecation": {
        "reason": "Metrics support is now using Micrometer.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "spring.metrics.export.statsd.host",
      "description": "Host of a statsd server to receive exported metrics.",
      "type": "java.lang.String",
      "deprecation": {
        "level": "error",
        "replacement": "management.metrics.export.statsd.host"
      }
    },
    {
      "defaultValue": 8125,
      "deprecated": true,
      "name": "spring.metrics.export.statsd.port",
      "description": "Port of a statsd server to receive exported metrics.",
      "type": "java.lang.Integer",
      "deprecation": {
        "level": "error",
        "replacement": "management.metrics.export.statsd.port"
      }
    },
    {
      "deprecated": true,
      "name": "spring.metrics.export.statsd.prefix",
      "description": "Prefix for statsd exported metrics.",
      "type": "java.lang.String",
      "deprecation": {
        "reason": "Metrics support is now using Micrometer.",
        "level": "error"
      }
    },
    {
      "deprecated": true,
      "name": "spring.metrics.export.triggers",
      "description": "Specific trigger properties per MetricWriter bean name.",
      "deprecation": {
        "reason": "Metrics support is now using Micrometer.",
        "level": "error"
      }
    }
  ]
}